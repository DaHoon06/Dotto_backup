plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.dotto.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar{ //plain.jar 생성 방지
    enabled = false
}

bootJar{
    //
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    archiveVersion = '0.0.0'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'

    //test Memory DB
    runtimeOnly 'com.h2database:h2'

    //main DB
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.29'

    /*runtimeOnly 'mysql:mysql-connector-java'*/
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
}

test {
    useJUnitPlatform()
}

// querydsl
dependencies {
    implementation 'com.querydsl:querydsl-jpa'
/*    compile("com.querydsl:querydsl-core")
    compile("com.querydsl:querydsl-jpa")*/

    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
    annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
}

clean {
    delete file('src/main/generated')
}

task cleanGeneatedDir(type: Delete) {
    delete file('src/main/generated')
}

    compileJava.options.compilerArgs << '-parameters'